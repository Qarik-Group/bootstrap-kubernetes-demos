#!/bin/bash

set -eu

# Install S&W Helm Charts rather than some arbitrary default of nonsense
export STABLE_REPO_URL=${STABLE_REPO_URL:-https://helm.starkandwayne.com}

# helm-manager can put its state into this project, not its own
export HELM_MGR_STATE_ROOT=${HELM_MGR_STATE_ROOT:-state/helm}

# helm-manager sets up TLS for tiller; so use `--tls` for all helm commands
export HELM_TLS_VERIFY=${HELM_TLS_VERIFY:-true}

cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

failfast() {
  [[ -d vendor/helm-tiller-manager ]] || {
    >&2 echo "Fetching missing submodules..."
    git submodule update --init
  }
}

up() {
  echo "Install/upgrade Tiller Server for Helm"
  helm-manager up
  helm repo update
  [[ "${CREDHUB_BASE_PATH:-X}" != "X" ]] && {
    echo "Storing helm into credhub ${CREDHUB_BASE_PATH}..."
    [[ -f $(helm home)/ca.pem ]] && {
      credhub set -n "${CREDHUB_BASE_PATH}/helm-ca" -t value -v "$(cat "$(helm home)/ca.pem")"
      credhub set -n "${CREDHUB_BASE_PATH}/helm-tiller-cert" -t value -v "$(cat "$(helm home)/cert.pem")"
      credhub set -n "${CREDHUB_BASE_PATH}/helm-tiller-key" -t value -v "$(cat "$(helm home)/key.pem")"
    }
  }
  exit 0
}

case "${1:-usage}" in
  failfast)
    shift
    failfast "$@"
    ;;

  up)
    shift
    up
    ;;

  *)
    ;;
esac
