#!/bin/bash

set -eu

repo_root="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
cd "$repo_root"

# Install S&W Helm Charts rather than some arbitrary default of nonsense
export STABLE_REPO_URL=${STABLE_REPO_URL:-https://helm.starkandwayne.com}

# helm-manager can put its state into this project, not its own
export HELM_MGR_STATE_ROOT=${HELM_MGR_STATE_ROOT:-$PWD/state/helm}

# helm-manager sets up TLS for tiller; so use `--tls` for all helm commands
export HELM_TLS_VERIFY=${HELM_TLS_VERIFY:-true}

_platform() {
    if [ "$(uname)" == "Darwin" ]; then
        echo "darwin"
    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        echo "linux"
    fi
}

_ensure_helm3() {
    version=$(grep "helm-cli" "${repo_root}/.versions" | cut -d= -f2)
    platform=$(_platform)
    [[ "$(command -v helm)X" == "X" || "$(helm version | grep "$version")X" == "X" ]] && {
        echo "installing helm v${version} into ${repo_root}/bin/"
        (
        url="https://get.helm.sh/helm-v${version}-${platform}-amd64.tar.gz"
        cd "$(mktemp -d)"
        curl -sSL "$url" | tar -xvz "${platform}-amd64/helm"
        chmod +x "${platform}-amd64/helm"
        mv "${platform}-amd64/helm" "${repo_root}/bin/"
        )
    }
    printf '' # ensure happy exit regardless of [[ test ]] block
}

up() {
  _ensure_helm3
}

case "${1:-usage}" in
  up)
    shift
    up
    ;;

  *)
    ;;
esac
